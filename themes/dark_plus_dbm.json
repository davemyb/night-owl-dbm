{
	"$schema": "vscode://schemas/color-theme",
	"name": "DBM Dark+ (default dark)",
	"include": "./dark_vs_dbm.json",
	"colors": {
		"editor.background": "#171717",
		"sideBar.background": "#141414",
		"statusBar.background": "#191919",
		"statusBar.foreground": "#999999",
		"statusBar.border": "#131313",
		"statusBar.debuggingBackground": "#69676c",
		"statusBar.debuggingForeground": "#d7d1df",
		"statusBar.debuggingBorder": "#191919",
		"statusBar.noFolderBackground": "#191919",
		"statusBar.noFolderForeground": "#69676c",
		"statusBar.noFolderBorder": "#131313",
		"statusBarItem.activeBackground": "#222222",
		"statusBarItem.hoverBackground": "#222222",
		"statusBarItem.prominentBackground": "#111111",
		"statusBarItem.prominentHoverBackground": "#111111",
	},
	"tokenColors": [
		{
			"name": "Function declarations",
			"scope": [
				"entity.name.function",
				"support.function",
				"support.constant.handlebars",
				"source.powershell variable.other.member",
				"entity.name.operator.custom-literal" // See https://en.cppreference.com/w/cpp/language/user_literal
			],
			"settings": {
				"foreground": "#7bd88f"
			}
		},
		{
			"name": "Comments and overrides inside comments",
			"scope": [
				"comment",
				"comment keyword",
				"comment markup.underline.link",
				"comment string",
				"comment punctuation.definition",
				"comment punctuation",
				"comment text"
			],
			"settings": {
				"fontStyle": "italic",
				"foreground": "#9d9aa1"
			}
		},
		{
			"name": "Punctuation tags",
			"scope": [
				"punctuation",
				"punctuation.definition.tag",
				"punctuation.definition.tag source",
				"punctuation.definition.group.begin.ruby",
				"punctuation.definition.group.end.ruby",
				"punctuation.definition.group.begin.css",
				"punctuation.definition.group.end.css",
				"punctuation.definition.string.end.html source.css"
			],
			"settings": {
				"foreground": "#8b888f"
			}
		},
		{
			"name": "Punctuation template string (`example`)",
			"scope": [
				"punctuation.template-string.element.begin",
				"punctuation.template-string.element.end",
				"punctuation.definition.string.template.begin",
				"punctuation.definition.string.template.end",
				"string.quoted.template punctuation.definition.string.begin",
				"string.quoted.template punctuation.definition.string.end"
			],
			"settings": {
				"foreground": "#fc618d"
			}
		},
		{
			"name": "Types declaration and references",
			"scope": [
				"support.class",
				"support.type",
				"entity.name.type",
				"entity.name.namespace",
				"entity.other.attribute",
				"entity.name.scope-resolution",
				"entity.name.class",
				"storage",
				"storage.type.numeric.go",
				"storage.type.byte.go",
				"storage.type.boolean.go",
				"storage.type.extends",
				"storage.type.function.arrow",
				"storage.type.string.go",
				"storage.type.uintptr.go",
				"storage.type.error.go",
				"storage.type.rune.go",
				"storage.type.cs",
				"storage.type.generic.cs",
				"storage.type.modifier.cs",
				"storage.type.variable.cs",
				"storage.type.annotation.java",
				"storage.type.generic.java",
				"storage.type.java",
				"storage.type.object.array.java",
				"storage.type.primitive.array.java",
				"storage.type.primitive.java",
				"storage.type.token.java",
				"storage.type.groovy",
				"storage.type.annotation.groovy",
				"storage.type.parameters.groovy",
				"storage.type.generic.groovy",
				"storage.type.object.array.groovy",
				"storage.type.primitive.array.groovy",
				"storage.type.primitive.groovy"
			],
			"settings": {
				"foreground": "#fc618d"
			}
		},
		{
			"name": "Keywords that affect the storage of a variable, function or data structure should use the following scope. Examples include static, inline, const, public and private.",
			"scope": "storage.modifier",
			"settings": {
				"fontStyle": "italic",
				"foreground": "#fc618d"
			}
		},
		{
			"name": "Tag name",
			"scope": [
				"entity.name.tag",
				"entity.name.tag.js.jsx support.class.component.js.jsx",
				"entity.name.tag support.class.component"
			],
			"settings": {
				"foreground": "#fc618d"
			}
		},
		{
			"name": "Types and definition/declaration keywords should use the following scope. Examples include int, bool, char, func, function, class and def. Depending on the language and semantics, const may be this or storage.modifier.",
			"scope": [
				"storage.type",
				"entity.other.attribute-name"
			],
			"settings": {
				"fontStyle": "italic",
				"foreground": "#5ad4e6"
			}
		},
		{
			"name": "Types declaration and references, TS grammar specific",
			"scope": [
				"meta.type.cast.expr",
				"meta.type.new.expr",
				"support.constant.math",
				"support.constant.dom",
				"support.constant.json",
				"entity.other.inherited-class"
			],
			"settings": {
				"foreground": "#4EC9B0"
			}
		},
		{
			"name": "Control flow / Special keywords",
			"scope": [
				"keyword",
				"keyword.control",
				"source.cpp keyword.operator.new",
				"keyword.operator",
				"keyword.operator.delete",
				"keyword.other.using",
				"keyword.other.operator",
				"entity.name.operator"
			],
			"settings": {
				"foreground": "#fc618d"
			}
		},
		// {
		// 	"name": "Function arguments",
		// 	"scope": [
		// 		"variable.parameter",
		// 		"parameters variable.function"
		// 	],
		// 	"settings": {
		// 		"fontStyle": "italic",
		// 		"foreground": "#fd9353"
		// 	}
		// },
		{
			"name": "Variable and parameter name",
			"scope": [
				"variable",
				"variable.other",
				"variable.other.member",
				"support.variable",
				"entity.name.variable",
				"constant.other",
				"constant.other.placeholder", // placeholders in strings
				"support.type.property-name"
			],
			"settings": {
				"foreground": "#d7d1df"
			}
		},
		{
			"name": "Object members",
			"scope": "meta.object.member",
			"settings": {
				"foreground": "#d7d1df"
			}
		},
		{
			"scope": [
				"string",
				"meta.embedded.assembly",
				"string.tag",
				"string.value"
			],
			"settings": {
				"foreground": "#c9ba68"
			}
		},
		{
			"name": "Constants and enums",
			"scope": [
				"variable.other.constant",
				"variable.other.enummember"
			],
			"settings": {
				"foreground": "#948ae3",
			}
		},
		{
			"name": "Object keys, TS grammar specific",
			"scope": [
				"meta.object-literal.key"
			],
			"settings": {
				"foreground": "#9CDCFE"
			}
		},
		{
			"name": "CSS property value",
			"scope": [
				"support.constant.property-value",
				"support.constant.font-name",
				"support.constant.media-type",
				"support.constant.media",
				"constant.other.color.rgb-value",
				"constant.other.rgb-value",
				"support.constant.color"
			],
			"settings": {
				"foreground": "#CE9178"
			}
		},
		{
			"name": "Regular expression groups",
			"scope": [
				"punctuation.definition.group.regexp",
				"punctuation.definition.group.assertion.regexp",
				"punctuation.definition.character-class.regexp",
				"punctuation.character.set.begin.regexp",
				"punctuation.character.set.end.regexp",
				"keyword.operator.negation.regexp",
				"support.other.parenthesis.regexp"
			],
			"settings": {
				"foreground": "#CE9178"
			}
		},
		{
			"scope": [
				"constant.character.character-class.regexp",
				"constant.other.character-class.set.regexp",
				"constant.other.character-class.regexp",
				"constant.character.set.regexp"
			],
			"settings": {
				"foreground": "#d16969"
			}
		},
		{
			"scope": [
				"keyword.operator.or.regexp",
				"keyword.control.anchor.regexp"
			],
			"settings": {
				"foreground": "#DCDCAA"
			}
		},
		{
			"scope": "keyword.operator.quantifier.regexp",
			"settings": {
				"foreground": "#d7ba7d"
			}
		},
		{
			"scope": "constant.character",
			"settings": {
				"foreground": "#569cd6"
			}
		},
		{
			"scope": "constant.character.escape",
			"settings": {
				"foreground": "#d7ba7d"
			}
		},
		{
			"scope": "entity.name.label",
			"settings": {
				"foreground": "#C8C8C8"
			}
		}
	],
	"semanticTokenColors": {
		"newOperator": "#C586C0",
		"stringLiteral": "#ce9178",
		"customLiteral": "#DCDCAA",
		"numberLiteral": "#b5cea8",
	}
}
